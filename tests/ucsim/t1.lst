                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module t1
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _prints
                             13 	.globl _putchar
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;t1.c:1: int putchar(int c) __naked
                             46 ;	---------------------------------
                             47 ; Function putchar
                             48 ; ---------------------------------
   0000                      49 _putchar::
                             50 ;t1.c:11: __endasm;
   0000 21 02 00      [10]   51 	ld	hl, #2
   0003 39            [11]   52 	add	hl, sp
   0004 6E            [ 7]   53 	ld	l, (hl)
   0005 3E 01         [ 7]   54 	ld	a, #1
   0007 CF            [11]   55 	rst	0x08
   0008 C9            [10]   56 	ret
                             57 ;t1.c:12: }
                             58 ;t1.c:14: void prints(char *s)
                             59 ;	---------------------------------
                             60 ; Function prints
                             61 ; ---------------------------------
   0009                      62 _prints::
                             63 ;t1.c:16: while (*s)
   0009 D1            [10]   64 	pop	de
   000A C1            [10]   65 	pop	bc
   000B C5            [11]   66 	push	bc
   000C D5            [11]   67 	push	de
   000D                      68 00101$:
   000D 0A            [ 7]   69 	ld	a, (bc)
   000E B7            [ 4]   70 	or	a, a
   000F C8            [11]   71 	ret	Z
                             72 ;t1.c:17: putchar(*s++);
   0010 03            [ 6]   73 	inc	bc
   0011 5F            [ 4]   74 	ld	e, a
   0012 16 00         [ 7]   75 	ld	d, #0x00
   0014 C5            [11]   76 	push	bc
   0015 D5            [11]   77 	push	de
   0016 CDr00r00      [17]   78 	call	_putchar
   0019 F1            [10]   79 	pop	af
   001A C1            [10]   80 	pop	bc
                             81 ;t1.c:18: }
   001B 18 F0         [12]   82 	jr	00101$
                             83 ;t1.c:20: void main(void)
                             84 ;	---------------------------------
                             85 ; Function main
                             86 ; ---------------------------------
   001D                      87 _main::
                             88 ;t1.c:22: prints("Start.\n");
   001D 21r49r00      [10]   89 	ld	hl, #___str_0
   0020 E5            [11]   90 	push	hl
   0021 CDr09r00      [17]   91 	call	_prints
   0024 F1            [10]   92 	pop	af
                             93 ;t1.c:23: for (int j= 0; j<41; j++)
   0025 01 00 00      [10]   94 	ld	bc, #0x0000
   0028                      95 00103$:
   0028 79            [ 4]   96 	ld	a, c
   0029 D6 29         [ 7]   97 	sub	a, #0x29
   002B 78            [ 4]   98 	ld	a, b
   002C 17            [ 4]   99 	rla
   002D 3F            [ 4]  100 	ccf
   002E 1F            [ 4]  101 	rra
   002F DE 80         [ 7]  102 	sbc	a, #0x80
   0031 30 0D         [12]  103 	jr	NC,00101$
                            104 ;t1.c:25: putchar('a');
   0033 C5            [11]  105 	push	bc
   0034 21 61 00      [10]  106 	ld	hl, #0x0061
   0037 E5            [11]  107 	push	hl
   0038 CDr00r00      [17]  108 	call	_putchar
   003B F1            [10]  109 	pop	af
   003C C1            [10]  110 	pop	bc
                            111 ;t1.c:23: for (int j= 0; j<41; j++)
   003D 03            [ 6]  112 	inc	bc
   003E 18 E8         [12]  113 	jr	00103$
   0040                     114 00101$:
                            115 ;t1.c:28: prints("Done.\n");
   0040 21r51r00      [10]  116 	ld	hl, #___str_1
   0043 E5            [11]  117 	push	hl
   0044 CDr09r00      [17]  118 	call	_prints
   0047 F1            [10]  119 	pop	af
                            120 ;t1.c:29: }
   0048 C9            [10]  121 	ret
   0049                     122 ___str_0:
   0049 53 74 61 72 74 2E   123 	.ascii "Start."
   004F 0A                  124 	.db 0x0a
   0050 00                  125 	.db 0x00
   0051                     126 ___str_1:
   0051 44 6F 6E 65 2E      127 	.ascii "Done."
   0056 0A                  128 	.db 0x0a
   0057 00                  129 	.db 0x00
                            130 	.area _CODE
                            131 	.area _INITIALIZER
                            132 	.area _CABS (ABS)
